/**
 * generated by Xtext 2.15.0
 */
package compilador.pascal;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>term</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link compilador.pascal.term#getSignedFactor <em>Signed Factor</em>}</li>
 *   <li>{@link compilador.pascal.term#getMultiplicativeoperator <em>Multiplicativeoperator</em>}</li>
 *   <li>{@link compilador.pascal.term#getTerm <em>Term</em>}</li>
 * </ul>
 *
 * @see compilador.pascal.PascalPackage#getterm()
 * @model
 * @generated
 */
public interface term extends EObject
{
  /**
   * Returns the value of the '<em><b>Signed Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Signed Factor</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Signed Factor</em>' containment reference.
   * @see #setSignedFactor(signedFactor)
   * @see compilador.pascal.PascalPackage#getterm_SignedFactor()
   * @model containment="true"
   * @generated
   */
  signedFactor getSignedFactor();

  /**
   * Sets the value of the '{@link compilador.pascal.term#getSignedFactor <em>Signed Factor</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Signed Factor</em>' containment reference.
   * @see #getSignedFactor()
   * @generated
   */
  void setSignedFactor(signedFactor value);

  /**
   * Returns the value of the '<em><b>Multiplicativeoperator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Multiplicativeoperator</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Multiplicativeoperator</em>' attribute.
   * @see #setMultiplicativeoperator(String)
   * @see compilador.pascal.PascalPackage#getterm_Multiplicativeoperator()
   * @model
   * @generated
   */
  String getMultiplicativeoperator();

  /**
   * Sets the value of the '{@link compilador.pascal.term#getMultiplicativeoperator <em>Multiplicativeoperator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Multiplicativeoperator</em>' attribute.
   * @see #getMultiplicativeoperator()
   * @generated
   */
  void setMultiplicativeoperator(String value);

  /**
   * Returns the value of the '<em><b>Term</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Term</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Term</em>' containment reference.
   * @see #setTerm(term)
   * @see compilador.pascal.PascalPackage#getterm_Term()
   * @model containment="true"
   * @generated
   */
  term getTerm();

  /**
   * Sets the value of the '{@link compilador.pascal.term#getTerm <em>Term</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Term</em>' containment reference.
   * @see #getTerm()
   * @generated
   */
  void setTerm(term value);

} // term
