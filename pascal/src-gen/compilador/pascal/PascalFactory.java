/**
 * generated by Xtext 2.15.0
 */
package compilador.pascal;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see compilador.pascal.PascalPackage
 * @generated
 */
public interface PascalFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  PascalFactory eINSTANCE = compilador.pascal.impl.PascalFactoryImpl.init();

  /**
   * Returns a new object of class '<em>pascal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>pascal</em>'.
   * @generated
   */
  pascal createpascal();

  /**
   * Returns a new object of class '<em>program</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>program</em>'.
   * @generated
   */
  program createprogram();

  /**
   * Returns a new object of class '<em>program Heading</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>program Heading</em>'.
   * @generated
   */
  programHeading createprogramHeading();

  /**
   * Returns a new object of class '<em>identifier List</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>identifier List</em>'.
   * @generated
   */
  identifierList createidentifierList();

  /**
   * Returns a new object of class '<em>block</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>block</em>'.
   * @generated
   */
  block createblock();

  /**
   * Returns a new object of class '<em>label declaration part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>label declaration part</em>'.
   * @generated
   */
  label_declaration_part createlabel_declaration_part();

  /**
   * Returns a new object of class '<em>label</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>label</em>'.
   * @generated
   */
  label createlabel();

  /**
   * Returns a new object of class '<em>unsigned Integer</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>unsigned Integer</em>'.
   * @generated
   */
  unsignedInteger createunsignedInteger();

  /**
   * Returns a new object of class '<em>constant Definition Part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>constant Definition Part</em>'.
   * @generated
   */
  constantDefinitionPart createconstantDefinitionPart();

  /**
   * Returns a new object of class '<em>constant Definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>constant Definition</em>'.
   * @generated
   */
  constantDefinition createconstantDefinition();

  /**
   * Returns a new object of class '<em>constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>constant</em>'.
   * @generated
   */
  constant createconstant();

  /**
   * Returns a new object of class '<em>constant Chr</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>constant Chr</em>'.
   * @generated
   */
  constantChr createconstantChr();

  /**
   * Returns a new object of class '<em>unsigned Number</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>unsigned Number</em>'.
   * @generated
   */
  unsignedNumber createunsignedNumber();

  /**
   * Returns a new object of class '<em>uses Units Part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>uses Units Part</em>'.
   * @generated
   */
  usesUnitsPart createusesUnitsPart();

  /**
   * Returns a new object of class '<em>type Definition Part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type Definition Part</em>'.
   * @generated
   */
  typeDefinitionPart createtypeDefinitionPart();

  /**
   * Returns a new object of class '<em>type Definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type Definition</em>'.
   * @generated
   */
  typeDefinition createtypeDefinition();

  /**
   * Returns a new object of class '<em>function Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>function Type</em>'.
   * @generated
   */
  functionType createfunctionType();

  /**
   * Returns a new object of class '<em>result Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>result Type</em>'.
   * @generated
   */
  resultType createresultType();

  /**
   * Returns a new object of class '<em>formal Parameter List</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>formal Parameter List</em>'.
   * @generated
   */
  formalParameterList createformalParameterList();

  /**
   * Returns a new object of class '<em>formal Parameter Section</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>formal Parameter Section</em>'.
   * @generated
   */
  formalParameterSection createformalParameterSection();

  /**
   * Returns a new object of class '<em>parameter Group</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>parameter Group</em>'.
   * @generated
   */
  parameterGroup createparameterGroup();

  /**
   * Returns a new object of class '<em>type Identifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type Identifier</em>'.
   * @generated
   */
  typeIdentifier createtypeIdentifier();

  /**
   * Returns a new object of class '<em>procedure Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure Type</em>'.
   * @generated
   */
  procedureType createprocedureType();

  /**
   * Returns a new object of class '<em>type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type</em>'.
   * @generated
   */
  type createtype();

  /**
   * Returns a new object of class '<em>pointer Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>pointer Type</em>'.
   * @generated
   */
  pointerType createpointerType();

  /**
   * Returns a new object of class '<em>simple Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>simple Type</em>'.
   * @generated
   */
  simpleType createsimpleType();

  /**
   * Returns a new object of class '<em>scalar Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>scalar Type</em>'.
   * @generated
   */
  scalarType createscalarType();

  /**
   * Returns a new object of class '<em>subrange Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>subrange Type</em>'.
   * @generated
   */
  subrangeType createsubrangeType();

  /**
   * Returns a new object of class '<em>structured Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>structured Type</em>'.
   * @generated
   */
  structuredType createstructuredType();

  /**
   * Returns a new object of class '<em>unpacked Structured Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>unpacked Structured Type</em>'.
   * @generated
   */
  unpackedStructuredType createunpackedStructuredType();

  /**
   * Returns a new object of class '<em>stringtype</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>stringtype</em>'.
   * @generated
   */
  stringtype createstringtype();

  /**
   * Returns a new object of class '<em>record Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>record Type</em>'.
   * @generated
   */
  recordType createrecordType();

  /**
   * Returns a new object of class '<em>field List</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>field List</em>'.
   * @generated
   */
  fieldList createfieldList();

  /**
   * Returns a new object of class '<em>fixed Part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>fixed Part</em>'.
   * @generated
   */
  fixedPart createfixedPart();

  /**
   * Returns a new object of class '<em>record Section</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>record Section</em>'.
   * @generated
   */
  recordSection createrecordSection();

  /**
   * Returns a new object of class '<em>variant Part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variant Part</em>'.
   * @generated
   */
  variantPart createvariantPart();

  /**
   * Returns a new object of class '<em>tag</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tag</em>'.
   * @generated
   */
  tag createtag();

  /**
   * Returns a new object of class '<em>variant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variant</em>'.
   * @generated
   */
  variant createvariant();

  /**
   * Returns a new object of class '<em>const List</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>const List</em>'.
   * @generated
   */
  constList createconstList();

  /**
   * Returns a new object of class '<em>variable Declaration Part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variable Declaration Part</em>'.
   * @generated
   */
  variableDeclarationPart createvariableDeclarationPart();

  /**
   * Returns a new object of class '<em>variable Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variable Declaration</em>'.
   * @generated
   */
  variableDeclaration createvariableDeclaration();

  /**
   * Returns a new object of class '<em>procedure And Function Declaration Part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure And Function Declaration Part</em>'.
   * @generated
   */
  procedureAndFunctionDeclarationPart createprocedureAndFunctionDeclarationPart();

  /**
   * Returns a new object of class '<em>procedure Or Function Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure Or Function Declaration</em>'.
   * @generated
   */
  procedureOrFunctionDeclaration createprocedureOrFunctionDeclaration();

  /**
   * Returns a new object of class '<em>procedure Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure Declaration</em>'.
   * @generated
   */
  procedureDeclaration createprocedureDeclaration();

  /**
   * Returns a new object of class '<em>function Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>function Declaration</em>'.
   * @generated
   */
  functionDeclaration createfunctionDeclaration();

  /**
   * Returns a new object of class '<em>statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>statement</em>'.
   * @generated
   */
  statement createstatement();

  /**
   * Returns a new object of class '<em>unlabelled Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>unlabelled Statement</em>'.
   * @generated
   */
  unlabelledStatement createunlabelledStatement();

  /**
   * Returns a new object of class '<em>simple Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>simple Statement</em>'.
   * @generated
   */
  simpleStatement createsimpleStatement();

  /**
   * Returns a new object of class '<em>assignment Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>assignment Statement</em>'.
   * @generated
   */
  assignmentStatement createassignmentStatement();

  /**
   * Returns a new object of class '<em>variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variable</em>'.
   * @generated
   */
  variable createvariable();

  /**
   * Returns a new object of class '<em>expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>expression</em>'.
   * @generated
   */
  expression createexpression();

  /**
   * Returns a new object of class '<em>simple Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>simple Expression</em>'.
   * @generated
   */
  simpleExpression createsimpleExpression();

  /**
   * Returns a new object of class '<em>term</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>term</em>'.
   * @generated
   */
  term createterm();

  /**
   * Returns a new object of class '<em>signed Factor</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>signed Factor</em>'.
   * @generated
   */
  signedFactor createsignedFactor();

  /**
   * Returns a new object of class '<em>factor</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>factor</em>'.
   * @generated
   */
  factor createfactor();

  /**
   * Returns a new object of class '<em>unsigned Constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>unsigned Constant</em>'.
   * @generated
   */
  unsignedConstant createunsignedConstant();

  /**
   * Returns a new object of class '<em>function Designator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>function Designator</em>'.
   * @generated
   */
  functionDesignator createfunctionDesignator();

  /**
   * Returns a new object of class '<em>parameter List</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>parameter List</em>'.
   * @generated
   */
  parameterList createparameterList();

  /**
   * Returns a new object of class '<em>actual Parameter</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>actual Parameter</em>'.
   * @generated
   */
  actualParameter createactualParameter();

  /**
   * Returns a new object of class '<em>goto Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>goto Statement</em>'.
   * @generated
   */
  gotoStatement creategotoStatement();

  /**
   * Returns a new object of class '<em>structured Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>structured Statement</em>'.
   * @generated
   */
  structuredStatement createstructuredStatement();

  /**
   * Returns a new object of class '<em>compound Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>compound Statement</em>'.
   * @generated
   */
  compoundStatement createcompoundStatement();

  /**
   * Returns a new object of class '<em>statements</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>statements</em>'.
   * @generated
   */
  statements createstatements();

  /**
   * Returns a new object of class '<em>conditional Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>conditional Statement</em>'.
   * @generated
   */
  conditionalStatement createconditionalStatement();

  /**
   * Returns a new object of class '<em>case Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>case Statement</em>'.
   * @generated
   */
  caseStatement createcaseStatement();

  /**
   * Returns a new object of class '<em>case List Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>case List Element</em>'.
   * @generated
   */
  caseListElement createcaseListElement();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  PascalPackage getPascalPackage();

} //PascalFactory
