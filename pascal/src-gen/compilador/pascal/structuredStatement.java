/**
 * generated by Xtext 2.15.0
 */
package compilador.pascal;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>structured Statement</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link compilador.pascal.structuredStatement#getCompoundStatement <em>Compound Statement</em>}</li>
 *   <li>{@link compilador.pascal.structuredStatement#getConditionalStatement <em>Conditional Statement</em>}</li>
 * </ul>
 *
 * @see compilador.pascal.PascalPackage#getstructuredStatement()
 * @model
 * @generated
 */
public interface structuredStatement extends EObject
{
  /**
   * Returns the value of the '<em><b>Compound Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Compound Statement</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Compound Statement</em>' containment reference.
   * @see #setCompoundStatement(compoundStatement)
   * @see compilador.pascal.PascalPackage#getstructuredStatement_CompoundStatement()
   * @model containment="true"
   * @generated
   */
  compoundStatement getCompoundStatement();

  /**
   * Sets the value of the '{@link compilador.pascal.structuredStatement#getCompoundStatement <em>Compound Statement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Compound Statement</em>' containment reference.
   * @see #getCompoundStatement()
   * @generated
   */
  void setCompoundStatement(compoundStatement value);

  /**
   * Returns the value of the '<em><b>Conditional Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Conditional Statement</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Conditional Statement</em>' containment reference.
   * @see #setConditionalStatement(conditionalStatement)
   * @see compilador.pascal.PascalPackage#getstructuredStatement_ConditionalStatement()
   * @model containment="true"
   * @generated
   */
  conditionalStatement getConditionalStatement();

  /**
   * Sets the value of the '{@link compilador.pascal.structuredStatement#getConditionalStatement <em>Conditional Statement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Conditional Statement</em>' containment reference.
   * @see #getConditionalStatement()
   * @generated
   */
  void setConditionalStatement(conditionalStatement value);

} // structuredStatement
