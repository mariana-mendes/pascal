/**
 * generated by Xtext 2.15.0
 */
package compilador.pascal;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>block</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link compilador.pascal.block#getLabel <em>Label</em>}</li>
 *   <li>{@link compilador.pascal.block#getConstantDefinitionPart <em>Constant Definition Part</em>}</li>
 *   <li>{@link compilador.pascal.block#getTypeDefinitionPart <em>Type Definition Part</em>}</li>
 *   <li>{@link compilador.pascal.block#getVariableDeclarationPart <em>Variable Declaration Part</em>}</li>
 *   <li>{@link compilador.pascal.block#getProcedureAndFunctionDeclarationPart <em>Procedure And Function Declaration Part</em>}</li>
 *   <li>{@link compilador.pascal.block#getUsesUnitsPart <em>Uses Units Part</em>}</li>
 *   <li>{@link compilador.pascal.block#getCompoundStatement <em>Compound Statement</em>}</li>
 * </ul>
 *
 * @see compilador.pascal.PascalPackage#getblock()
 * @model
 * @generated
 */
public interface block extends EObject
{
  /**
   * Returns the value of the '<em><b>Label</b></em>' containment reference list.
   * The list contents are of type {@link compilador.pascal.label_declaration_part}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Label</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Label</em>' containment reference list.
   * @see compilador.pascal.PascalPackage#getblock_Label()
   * @model containment="true"
   * @generated
   */
  EList<label_declaration_part> getLabel();

  /**
   * Returns the value of the '<em><b>Constant Definition Part</b></em>' containment reference list.
   * The list contents are of type {@link compilador.pascal.constantDefinitionPart}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Constant Definition Part</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Constant Definition Part</em>' containment reference list.
   * @see compilador.pascal.PascalPackage#getblock_ConstantDefinitionPart()
   * @model containment="true"
   * @generated
   */
  EList<constantDefinitionPart> getConstantDefinitionPart();

  /**
   * Returns the value of the '<em><b>Type Definition Part</b></em>' containment reference list.
   * The list contents are of type {@link compilador.pascal.typeDefinitionPart}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Type Definition Part</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type Definition Part</em>' containment reference list.
   * @see compilador.pascal.PascalPackage#getblock_TypeDefinitionPart()
   * @model containment="true"
   * @generated
   */
  EList<typeDefinitionPart> getTypeDefinitionPart();

  /**
   * Returns the value of the '<em><b>Variable Declaration Part</b></em>' containment reference list.
   * The list contents are of type {@link compilador.pascal.variableDeclarationPart}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Variable Declaration Part</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variable Declaration Part</em>' containment reference list.
   * @see compilador.pascal.PascalPackage#getblock_VariableDeclarationPart()
   * @model containment="true"
   * @generated
   */
  EList<variableDeclarationPart> getVariableDeclarationPart();

  /**
   * Returns the value of the '<em><b>Procedure And Function Declaration Part</b></em>' containment reference list.
   * The list contents are of type {@link compilador.pascal.procedureAndFunctionDeclarationPart}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Procedure And Function Declaration Part</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Procedure And Function Declaration Part</em>' containment reference list.
   * @see compilador.pascal.PascalPackage#getblock_ProcedureAndFunctionDeclarationPart()
   * @model containment="true"
   * @generated
   */
  EList<procedureAndFunctionDeclarationPart> getProcedureAndFunctionDeclarationPart();

  /**
   * Returns the value of the '<em><b>Uses Units Part</b></em>' containment reference list.
   * The list contents are of type {@link compilador.pascal.usesUnitsPart}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Uses Units Part</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Uses Units Part</em>' containment reference list.
   * @see compilador.pascal.PascalPackage#getblock_UsesUnitsPart()
   * @model containment="true"
   * @generated
   */
  EList<usesUnitsPart> getUsesUnitsPart();

  /**
   * Returns the value of the '<em><b>Compound Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Compound Statement</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Compound Statement</em>' containment reference.
   * @see #setCompoundStatement(compoundStatement)
   * @see compilador.pascal.PascalPackage#getblock_CompoundStatement()
   * @model containment="true"
   * @generated
   */
  compoundStatement getCompoundStatement();

  /**
   * Sets the value of the '{@link compilador.pascal.block#getCompoundStatement <em>Compound Statement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Compound Statement</em>' containment reference.
   * @see #getCompoundStatement()
   * @generated
   */
  void setCompoundStatement(compoundStatement value);

} // block
