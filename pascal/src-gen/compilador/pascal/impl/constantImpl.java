/**
 * generated by Xtext 2.15.0
 */
package compilador.pascal.impl;

import compilador.pascal.PascalPackage;
import compilador.pascal.constant;
import compilador.pascal.constantChr;
import compilador.pascal.fieldList;
import compilador.pascal.unsignedNumber;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>constant</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link compilador.pascal.impl.constantImpl#getNumber <em>Number</em>}</li>
 *   <li>{@link compilador.pascal.impl.constantImpl#getSign <em>Sign</em>}</li>
 *   <li>{@link compilador.pascal.impl.constantImpl#getNumber1 <em>Number1</em>}</li>
 *   <li>{@link compilador.pascal.impl.constantImpl#getIdentifier <em>Identifier</em>}</li>
 *   <li>{@link compilador.pascal.impl.constantImpl#getSTRING_LITERAL <em>STRING LITERAL</em>}</li>
 *   <li>{@link compilador.pascal.impl.constantImpl#getSign2 <em>Sign2</em>}</li>
 *   <li>{@link compilador.pascal.impl.constantImpl#getIdentifier1 <em>Identifier1</em>}</li>
 *   <li>{@link compilador.pascal.impl.constantImpl#getConstantChr <em>Constant Chr</em>}</li>
 *   <li>{@link compilador.pascal.impl.constantImpl#getConstant <em>Constant</em>}</li>
 *   <li>{@link compilador.pascal.impl.constantImpl#getFieldList <em>Field List</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class constantImpl extends variantImpl implements constant
{
  /**
   * The cached value of the '{@link #getNumber() <em>Number</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected unsignedNumber number;

  /**
   * The default value of the '{@link #getSign() <em>Sign</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSign()
   * @generated
   * @ordered
   */
  protected static final String SIGN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSign() <em>Sign</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSign()
   * @generated
   * @ordered
   */
  protected String sign = SIGN_EDEFAULT;

  /**
   * The cached value of the '{@link #getNumber1() <em>Number1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber1()
   * @generated
   * @ordered
   */
  protected unsignedNumber number1;

  /**
   * The default value of the '{@link #getIdentifier() <em>Identifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdentifier()
   * @generated
   * @ordered
   */
  protected static final String IDENTIFIER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIdentifier() <em>Identifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdentifier()
   * @generated
   * @ordered
   */
  protected String identifier = IDENTIFIER_EDEFAULT;

  /**
   * The default value of the '{@link #getSTRING_LITERAL() <em>STRING LITERAL</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSTRING_LITERAL()
   * @generated
   * @ordered
   */
  protected static final String STRING_LITERAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSTRING_LITERAL() <em>STRING LITERAL</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSTRING_LITERAL()
   * @generated
   * @ordered
   */
  protected String strinG_LITERAL = STRING_LITERAL_EDEFAULT;

  /**
   * The cached value of the '{@link #getSign2() <em>Sign2</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSign2()
   * @generated
   * @ordered
   */
  protected EList<String> sign2;

  /**
   * The cached value of the '{@link #getIdentifier1() <em>Identifier1</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdentifier1()
   * @generated
   * @ordered
   */
  protected EList<String> identifier1;

  /**
   * The cached value of the '{@link #getConstantChr() <em>Constant Chr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstantChr()
   * @generated
   * @ordered
   */
  protected constantChr constantChr;

  /**
   * The cached value of the '{@link #getConstant() <em>Constant</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstant()
   * @generated
   * @ordered
   */
  protected EList<constant> constant;

  /**
   * The cached value of the '{@link #getFieldList() <em>Field List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFieldList()
   * @generated
   * @ordered
   */
  protected fieldList fieldList;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected constantImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.CONSTANT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public unsignedNumber getNumber()
  {
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNumber(unsignedNumber newNumber, NotificationChain msgs)
  {
    unsignedNumber oldNumber = number;
    number = newNumber;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.CONSTANT__NUMBER, oldNumber, newNumber);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNumber(unsignedNumber newNumber)
  {
    if (newNumber != number)
    {
      NotificationChain msgs = null;
      if (number != null)
        msgs = ((InternalEObject)number).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.CONSTANT__NUMBER, null, msgs);
      if (newNumber != null)
        msgs = ((InternalEObject)newNumber).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.CONSTANT__NUMBER, null, msgs);
      msgs = basicSetNumber(newNumber, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.CONSTANT__NUMBER, newNumber, newNumber));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSign()
  {
    return sign;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSign(String newSign)
  {
    String oldSign = sign;
    sign = newSign;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.CONSTANT__SIGN, oldSign, sign));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public unsignedNumber getNumber1()
  {
    return number1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNumber1(unsignedNumber newNumber1, NotificationChain msgs)
  {
    unsignedNumber oldNumber1 = number1;
    number1 = newNumber1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.CONSTANT__NUMBER1, oldNumber1, newNumber1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNumber1(unsignedNumber newNumber1)
  {
    if (newNumber1 != number1)
    {
      NotificationChain msgs = null;
      if (number1 != null)
        msgs = ((InternalEObject)number1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.CONSTANT__NUMBER1, null, msgs);
      if (newNumber1 != null)
        msgs = ((InternalEObject)newNumber1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.CONSTANT__NUMBER1, null, msgs);
      msgs = basicSetNumber1(newNumber1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.CONSTANT__NUMBER1, newNumber1, newNumber1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getIdentifier()
  {
    return identifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIdentifier(String newIdentifier)
  {
    String oldIdentifier = identifier;
    identifier = newIdentifier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.CONSTANT__IDENTIFIER, oldIdentifier, identifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSTRING_LITERAL()
  {
    return strinG_LITERAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSTRING_LITERAL(String newSTRING_LITERAL)
  {
    String oldSTRING_LITERAL = strinG_LITERAL;
    strinG_LITERAL = newSTRING_LITERAL;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.CONSTANT__STRING_LITERAL, oldSTRING_LITERAL, strinG_LITERAL));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getSign2()
  {
    if (sign2 == null)
    {
      sign2 = new EDataTypeEList<String>(String.class, this, PascalPackage.CONSTANT__SIGN2);
    }
    return sign2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getIdentifier1()
  {
    if (identifier1 == null)
    {
      identifier1 = new EDataTypeEList<String>(String.class, this, PascalPackage.CONSTANT__IDENTIFIER1);
    }
    return identifier1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public constantChr getConstantChr()
  {
    return constantChr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstantChr(constantChr newConstantChr, NotificationChain msgs)
  {
    constantChr oldConstantChr = constantChr;
    constantChr = newConstantChr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.CONSTANT__CONSTANT_CHR, oldConstantChr, newConstantChr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstantChr(constantChr newConstantChr)
  {
    if (newConstantChr != constantChr)
    {
      NotificationChain msgs = null;
      if (constantChr != null)
        msgs = ((InternalEObject)constantChr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.CONSTANT__CONSTANT_CHR, null, msgs);
      if (newConstantChr != null)
        msgs = ((InternalEObject)newConstantChr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.CONSTANT__CONSTANT_CHR, null, msgs);
      msgs = basicSetConstantChr(newConstantChr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.CONSTANT__CONSTANT_CHR, newConstantChr, newConstantChr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<constant> getConstant()
  {
    if (constant == null)
    {
      constant = new EObjectContainmentEList<constant>(constant.class, this, PascalPackage.CONSTANT__CONSTANT);
    }
    return constant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public fieldList getFieldList()
  {
    return fieldList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFieldList(fieldList newFieldList, NotificationChain msgs)
  {
    fieldList oldFieldList = fieldList;
    fieldList = newFieldList;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.CONSTANT__FIELD_LIST, oldFieldList, newFieldList);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFieldList(fieldList newFieldList)
  {
    if (newFieldList != fieldList)
    {
      NotificationChain msgs = null;
      if (fieldList != null)
        msgs = ((InternalEObject)fieldList).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.CONSTANT__FIELD_LIST, null, msgs);
      if (newFieldList != null)
        msgs = ((InternalEObject)newFieldList).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.CONSTANT__FIELD_LIST, null, msgs);
      msgs = basicSetFieldList(newFieldList, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.CONSTANT__FIELD_LIST, newFieldList, newFieldList));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.CONSTANT__NUMBER:
        return basicSetNumber(null, msgs);
      case PascalPackage.CONSTANT__NUMBER1:
        return basicSetNumber1(null, msgs);
      case PascalPackage.CONSTANT__CONSTANT_CHR:
        return basicSetConstantChr(null, msgs);
      case PascalPackage.CONSTANT__CONSTANT:
        return ((InternalEList<?>)getConstant()).basicRemove(otherEnd, msgs);
      case PascalPackage.CONSTANT__FIELD_LIST:
        return basicSetFieldList(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.CONSTANT__NUMBER:
        return getNumber();
      case PascalPackage.CONSTANT__SIGN:
        return getSign();
      case PascalPackage.CONSTANT__NUMBER1:
        return getNumber1();
      case PascalPackage.CONSTANT__IDENTIFIER:
        return getIdentifier();
      case PascalPackage.CONSTANT__STRING_LITERAL:
        return getSTRING_LITERAL();
      case PascalPackage.CONSTANT__SIGN2:
        return getSign2();
      case PascalPackage.CONSTANT__IDENTIFIER1:
        return getIdentifier1();
      case PascalPackage.CONSTANT__CONSTANT_CHR:
        return getConstantChr();
      case PascalPackage.CONSTANT__CONSTANT:
        return getConstant();
      case PascalPackage.CONSTANT__FIELD_LIST:
        return getFieldList();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.CONSTANT__NUMBER:
        setNumber((unsignedNumber)newValue);
        return;
      case PascalPackage.CONSTANT__SIGN:
        setSign((String)newValue);
        return;
      case PascalPackage.CONSTANT__NUMBER1:
        setNumber1((unsignedNumber)newValue);
        return;
      case PascalPackage.CONSTANT__IDENTIFIER:
        setIdentifier((String)newValue);
        return;
      case PascalPackage.CONSTANT__STRING_LITERAL:
        setSTRING_LITERAL((String)newValue);
        return;
      case PascalPackage.CONSTANT__SIGN2:
        getSign2().clear();
        getSign2().addAll((Collection<? extends String>)newValue);
        return;
      case PascalPackage.CONSTANT__IDENTIFIER1:
        getIdentifier1().clear();
        getIdentifier1().addAll((Collection<? extends String>)newValue);
        return;
      case PascalPackage.CONSTANT__CONSTANT_CHR:
        setConstantChr((constantChr)newValue);
        return;
      case PascalPackage.CONSTANT__CONSTANT:
        getConstant().clear();
        getConstant().addAll((Collection<? extends constant>)newValue);
        return;
      case PascalPackage.CONSTANT__FIELD_LIST:
        setFieldList((fieldList)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.CONSTANT__NUMBER:
        setNumber((unsignedNumber)null);
        return;
      case PascalPackage.CONSTANT__SIGN:
        setSign(SIGN_EDEFAULT);
        return;
      case PascalPackage.CONSTANT__NUMBER1:
        setNumber1((unsignedNumber)null);
        return;
      case PascalPackage.CONSTANT__IDENTIFIER:
        setIdentifier(IDENTIFIER_EDEFAULT);
        return;
      case PascalPackage.CONSTANT__STRING_LITERAL:
        setSTRING_LITERAL(STRING_LITERAL_EDEFAULT);
        return;
      case PascalPackage.CONSTANT__SIGN2:
        getSign2().clear();
        return;
      case PascalPackage.CONSTANT__IDENTIFIER1:
        getIdentifier1().clear();
        return;
      case PascalPackage.CONSTANT__CONSTANT_CHR:
        setConstantChr((constantChr)null);
        return;
      case PascalPackage.CONSTANT__CONSTANT:
        getConstant().clear();
        return;
      case PascalPackage.CONSTANT__FIELD_LIST:
        setFieldList((fieldList)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.CONSTANT__NUMBER:
        return number != null;
      case PascalPackage.CONSTANT__SIGN:
        return SIGN_EDEFAULT == null ? sign != null : !SIGN_EDEFAULT.equals(sign);
      case PascalPackage.CONSTANT__NUMBER1:
        return number1 != null;
      case PascalPackage.CONSTANT__IDENTIFIER:
        return IDENTIFIER_EDEFAULT == null ? identifier != null : !IDENTIFIER_EDEFAULT.equals(identifier);
      case PascalPackage.CONSTANT__STRING_LITERAL:
        return STRING_LITERAL_EDEFAULT == null ? strinG_LITERAL != null : !STRING_LITERAL_EDEFAULT.equals(strinG_LITERAL);
      case PascalPackage.CONSTANT__SIGN2:
        return sign2 != null && !sign2.isEmpty();
      case PascalPackage.CONSTANT__IDENTIFIER1:
        return identifier1 != null && !identifier1.isEmpty();
      case PascalPackage.CONSTANT__CONSTANT_CHR:
        return constantChr != null;
      case PascalPackage.CONSTANT__CONSTANT:
        return constant != null && !constant.isEmpty();
      case PascalPackage.CONSTANT__FIELD_LIST:
        return fieldList != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (sign: ");
    result.append(sign);
    result.append(", identifier: ");
    result.append(identifier);
    result.append(", STRING_LITERAL: ");
    result.append(strinG_LITERAL);
    result.append(", sign2: ");
    result.append(sign2);
    result.append(", identifier1: ");
    result.append(identifier1);
    result.append(')');
    return result.toString();
  }

} //constantImpl
