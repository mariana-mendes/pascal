/**
 * generated by Xtext 2.15.0
 */
package compilador.pascal.impl;

import compilador.pascal.PascalPackage;
import compilador.pascal.formalParameterList;
import compilador.pascal.formalParameterSection;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>formal Parameter List</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link compilador.pascal.impl.formalParameterListImpl#getFormalParameterSection <em>Formal Parameter Section</em>}</li>
 *   <li>{@link compilador.pascal.impl.formalParameterListImpl#getFormalParameterSection2 <em>Formal Parameter Section2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class formalParameterListImpl extends MinimalEObjectImpl.Container implements formalParameterList
{
  /**
   * The cached value of the '{@link #getFormalParameterSection() <em>Formal Parameter Section</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFormalParameterSection()
   * @generated
   * @ordered
   */
  protected formalParameterSection formalParameterSection;

  /**
   * The cached value of the '{@link #getFormalParameterSection2() <em>Formal Parameter Section2</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFormalParameterSection2()
   * @generated
   * @ordered
   */
  protected EList<formalParameterSection> formalParameterSection2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected formalParameterListImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.FORMAL_PARAMETER_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public formalParameterSection getFormalParameterSection()
  {
    return formalParameterSection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFormalParameterSection(formalParameterSection newFormalParameterSection, NotificationChain msgs)
  {
    formalParameterSection oldFormalParameterSection = formalParameterSection;
    formalParameterSection = newFormalParameterSection;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION, oldFormalParameterSection, newFormalParameterSection);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFormalParameterSection(formalParameterSection newFormalParameterSection)
  {
    if (newFormalParameterSection != formalParameterSection)
    {
      NotificationChain msgs = null;
      if (formalParameterSection != null)
        msgs = ((InternalEObject)formalParameterSection).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION, null, msgs);
      if (newFormalParameterSection != null)
        msgs = ((InternalEObject)newFormalParameterSection).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION, null, msgs);
      msgs = basicSetFormalParameterSection(newFormalParameterSection, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION, newFormalParameterSection, newFormalParameterSection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<formalParameterSection> getFormalParameterSection2()
  {
    if (formalParameterSection2 == null)
    {
      formalParameterSection2 = new EObjectContainmentEList<formalParameterSection>(formalParameterSection.class, this, PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION2);
    }
    return formalParameterSection2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION:
        return basicSetFormalParameterSection(null, msgs);
      case PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION2:
        return ((InternalEList<?>)getFormalParameterSection2()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION:
        return getFormalParameterSection();
      case PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION2:
        return getFormalParameterSection2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION:
        setFormalParameterSection((formalParameterSection)newValue);
        return;
      case PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION2:
        getFormalParameterSection2().clear();
        getFormalParameterSection2().addAll((Collection<? extends formalParameterSection>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION:
        setFormalParameterSection((formalParameterSection)null);
        return;
      case PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION2:
        getFormalParameterSection2().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION:
        return formalParameterSection != null;
      case PascalPackage.FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION2:
        return formalParameterSection2 != null && !formalParameterSection2.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //formalParameterListImpl
