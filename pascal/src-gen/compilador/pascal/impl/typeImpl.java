/**
 * generated by Xtext 2.15.0
 */
package compilador.pascal.impl;

import compilador.pascal.PascalPackage;
import compilador.pascal.pointerType;
import compilador.pascal.simpleType;
import compilador.pascal.structuredType;
import compilador.pascal.type;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link compilador.pascal.impl.typeImpl#getSimpleType <em>Simple Type</em>}</li>
 *   <li>{@link compilador.pascal.impl.typeImpl#getStructuredType <em>Structured Type</em>}</li>
 *   <li>{@link compilador.pascal.impl.typeImpl#getPointerType <em>Pointer Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class typeImpl extends MinimalEObjectImpl.Container implements type
{
  /**
   * The cached value of the '{@link #getSimpleType() <em>Simple Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimpleType()
   * @generated
   * @ordered
   */
  protected simpleType simpleType;

  /**
   * The cached value of the '{@link #getStructuredType() <em>Structured Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStructuredType()
   * @generated
   * @ordered
   */
  protected structuredType structuredType;

  /**
   * The cached value of the '{@link #getPointerType() <em>Pointer Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPointerType()
   * @generated
   * @ordered
   */
  protected pointerType pointerType;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected typeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public simpleType getSimpleType()
  {
    return simpleType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSimpleType(simpleType newSimpleType, NotificationChain msgs)
  {
    simpleType oldSimpleType = simpleType;
    simpleType = newSimpleType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.TYPE__SIMPLE_TYPE, oldSimpleType, newSimpleType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSimpleType(simpleType newSimpleType)
  {
    if (newSimpleType != simpleType)
    {
      NotificationChain msgs = null;
      if (simpleType != null)
        msgs = ((InternalEObject)simpleType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.TYPE__SIMPLE_TYPE, null, msgs);
      if (newSimpleType != null)
        msgs = ((InternalEObject)newSimpleType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.TYPE__SIMPLE_TYPE, null, msgs);
      msgs = basicSetSimpleType(newSimpleType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.TYPE__SIMPLE_TYPE, newSimpleType, newSimpleType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public structuredType getStructuredType()
  {
    return structuredType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStructuredType(structuredType newStructuredType, NotificationChain msgs)
  {
    structuredType oldStructuredType = structuredType;
    structuredType = newStructuredType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.TYPE__STRUCTURED_TYPE, oldStructuredType, newStructuredType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStructuredType(structuredType newStructuredType)
  {
    if (newStructuredType != structuredType)
    {
      NotificationChain msgs = null;
      if (structuredType != null)
        msgs = ((InternalEObject)structuredType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.TYPE__STRUCTURED_TYPE, null, msgs);
      if (newStructuredType != null)
        msgs = ((InternalEObject)newStructuredType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.TYPE__STRUCTURED_TYPE, null, msgs);
      msgs = basicSetStructuredType(newStructuredType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.TYPE__STRUCTURED_TYPE, newStructuredType, newStructuredType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public pointerType getPointerType()
  {
    return pointerType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPointerType(pointerType newPointerType, NotificationChain msgs)
  {
    pointerType oldPointerType = pointerType;
    pointerType = newPointerType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.TYPE__POINTER_TYPE, oldPointerType, newPointerType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPointerType(pointerType newPointerType)
  {
    if (newPointerType != pointerType)
    {
      NotificationChain msgs = null;
      if (pointerType != null)
        msgs = ((InternalEObject)pointerType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.TYPE__POINTER_TYPE, null, msgs);
      if (newPointerType != null)
        msgs = ((InternalEObject)newPointerType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.TYPE__POINTER_TYPE, null, msgs);
      msgs = basicSetPointerType(newPointerType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.TYPE__POINTER_TYPE, newPointerType, newPointerType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.TYPE__SIMPLE_TYPE:
        return basicSetSimpleType(null, msgs);
      case PascalPackage.TYPE__STRUCTURED_TYPE:
        return basicSetStructuredType(null, msgs);
      case PascalPackage.TYPE__POINTER_TYPE:
        return basicSetPointerType(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.TYPE__SIMPLE_TYPE:
        return getSimpleType();
      case PascalPackage.TYPE__STRUCTURED_TYPE:
        return getStructuredType();
      case PascalPackage.TYPE__POINTER_TYPE:
        return getPointerType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.TYPE__SIMPLE_TYPE:
        setSimpleType((simpleType)newValue);
        return;
      case PascalPackage.TYPE__STRUCTURED_TYPE:
        setStructuredType((structuredType)newValue);
        return;
      case PascalPackage.TYPE__POINTER_TYPE:
        setPointerType((pointerType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.TYPE__SIMPLE_TYPE:
        setSimpleType((simpleType)null);
        return;
      case PascalPackage.TYPE__STRUCTURED_TYPE:
        setStructuredType((structuredType)null);
        return;
      case PascalPackage.TYPE__POINTER_TYPE:
        setPointerType((pointerType)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.TYPE__SIMPLE_TYPE:
        return simpleType != null;
      case PascalPackage.TYPE__STRUCTURED_TYPE:
        return structuredType != null;
      case PascalPackage.TYPE__POINTER_TYPE:
        return pointerType != null;
    }
    return super.eIsSet(featureID);
  }

} //typeImpl
