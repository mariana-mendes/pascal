/**
 * generated by Xtext 2.15.0
 */
package compilador.pascal;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>simple Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link compilador.pascal.simpleExpression#getTerm <em>Term</em>}</li>
 *   <li>{@link compilador.pascal.simpleExpression#getAdditiveoperator <em>Additiveoperator</em>}</li>
 *   <li>{@link compilador.pascal.simpleExpression#getSimpleExpression <em>Simple Expression</em>}</li>
 * </ul>
 * </p>
 *
 * @see compilador.pascal.PascalPackage#getsimpleExpression()
 * @model
 * @generated
 */
public interface simpleExpression extends EObject
{
  /**
   * Returns the value of the '<em><b>Term</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Term</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Term</em>' containment reference.
   * @see #setTerm(term)
   * @see compilador.pascal.PascalPackage#getsimpleExpression_Term()
   * @model containment="true"
   * @generated
   */
  term getTerm();

  /**
   * Sets the value of the '{@link compilador.pascal.simpleExpression#getTerm <em>Term</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Term</em>' containment reference.
   * @see #getTerm()
   * @generated
   */
  void setTerm(term value);

  /**
   * Returns the value of the '<em><b>Additiveoperator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Additiveoperator</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Additiveoperator</em>' attribute.
   * @see #setAdditiveoperator(String)
   * @see compilador.pascal.PascalPackage#getsimpleExpression_Additiveoperator()
   * @model
   * @generated
   */
  String getAdditiveoperator();

  /**
   * Sets the value of the '{@link compilador.pascal.simpleExpression#getAdditiveoperator <em>Additiveoperator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Additiveoperator</em>' attribute.
   * @see #getAdditiveoperator()
   * @generated
   */
  void setAdditiveoperator(String value);

  /**
   * Returns the value of the '<em><b>Simple Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Simple Expression</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Simple Expression</em>' containment reference.
   * @see #setSimpleExpression(simpleExpression)
   * @see compilador.pascal.PascalPackage#getsimpleExpression_SimpleExpression()
   * @model containment="true"
   * @generated
   */
  simpleExpression getSimpleExpression();

  /**
   * Sets the value of the '{@link compilador.pascal.simpleExpression#getSimpleExpression <em>Simple Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Simple Expression</em>' containment reference.
   * @see #getSimpleExpression()
   * @generated
   */
  void setSimpleExpression(simpleExpression value);

} // simpleExpression
